/**
 * \file event.h
 * \brief Contains code related to events.
 */
#pragma once

/**
 * \enum HxfEventType
 * \brief The type of an HxfEvent
 */
typedef enum HxfEventType {
    HXF_EVENT_TYPE_KEYPRESS, ///< The key is pressed
    HXF_EVENT_TYPE_KEYRELEASE, ///< The key is released
    HXF_EVENT_TYPE_WINDOW_SHOULD_CLOSE ///< The window should close (for example because the close button was clicked)
} HxfEventType;

/**
 * \enum HxfEventKey
 * \brief Represents a key that has been pressed or released.
 * 
 * Can be used when a HXF_EVENT_TYPE_KEYPRESS or HXF_EVENT_TYPE_KEYRELEASE happened.
 */
typedef enum HxfEventKey {
    HXF_EVENT_KEY_UNKNOWN, ///< Unknown key
    HXF_EVENT_KEY_ESCAPE, ///< The escape key
    HXF_EVENT_KEY_SPACE, ///< The spacebar key
    HXF_EVENT_KEY_ARROW_UP,
    HXF_EVENT_KEY_ARROW_DOWN,
    HXF_EVENT_KEY_ARROW_LEFT,
    HXF_EVENT_KEY_ARROW_RIGHT,
    HXF_EVENT_KEY_W,
    HXF_EVENT_KEY_Q,
    HXF_EVENT_KEY_S,
    HXF_EVENT_KEY_D,
} HxfEventKey;

/**
 * \struct HxfEvent
 * \brief An event generated by a HxfWindow.
 */
typedef struct HxfEvent {
    /**
     * \brief The type of the event.
     */
    HxfEventType type;

    /**
     * \brief The data of the event.
     * 
     * For example if the type is HXF_EVENT_TYPE_KEYPRESS then the data is an HxfEventKey.
     */
    int data;
} HxfEvent;